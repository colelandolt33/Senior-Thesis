{"version":3,"sources":["Components/Login/Login.js","Components/NowPlaying/NowPlaying.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/DiscoverWeekly/DiscoverWeekly.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["Login","props","state","readInstructions","this","className","onClick","setState","href","target","src","style","alignSelf","logIn","React","Component","NowPlaying","trackName","trackImage","width","alt","trackArtist","SearchBar","term","handleTermChange","bind","search","onSearch","event","value","onChange","placeholder","Track","saved","saveTrack","unsaveTrack","playTrack","pauseTrack","checkNowPlaying","addTrack","removeTrack","uri","nowPlaying","isPlaying","isRemoval","onSave","id","onUnsave","onPause","onPlay","onAdd","track","onRemove","name","artist","album","playback","heart","renderAction","TrackList","tracks","map","key","SearchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistName","playlistTracks","onSavePlaylist","DiscoverWeekly","timeStart","songRecommendations","timeline","spotifyApi","SpotifyWebApi","confirmExit","leave_message","window","onbeforeunload","e","cancelBubble","returnValue","stopPropagation","preventDefault","App","params","getHashParams","access_token","refresh_token","expires_in","isLoggedIn","username","userID","recommendations","searchResults","console","log","Date","now","setAccessToken","setInterval","get_refresh_token","XMLHttpRequest","open","setRequestHeader","onload","JSON","parse","response","send","stringify","getUser","getDiscoverWeekly","setIntervalAsync","a","async","getMyCurrentPlaybackState","is_playing","item","artists","duration_ms","progress_ms","image","images","url","beginPlayback","endPlayback","updatePlaylistName","savePlaylist","hashParams","r","q","location","hash","substring","exec","decodeURIComponent","getMe","user","display_name","getUserPlaylists","limit","then","playlists","items","pl","filter","err","error","playlist","getPlaylistTracks","discoverWeekly","getAudioFeaturesForTracks","data","danceability","energy","loudness","mode","speechiness","acousticness","instrumentalness","liveness","valence","tempo","time_signature","features","i","Object","assign","searchTracks","results","push","type","time_stamp","time_end","play","pause","addToMySavedTracks","dwObject","song","searchObject","trackObject","removeFromMySavedTracks","find","savedTrack","currentTrack","trackUris","createPlaylist","newPlaylist","save_request","save_songs","addTracksToPlaylist","alert","updateSearchResults","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f7549a1.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      readInstructions: false,\n    }\n  }\n\n  render() {\n    let readInstructions = this.state.readInstructions;\n\n    if (readInstructions === false) {\n      return (\n        <div className=\"Login\">\n          <div className=\"Intro\">\n            <p>Welcome! This is an experiment where you can interact with your personalized\n              Discover Weekly Playlist from Spotify in order to discover\n              new songs and artists. We are interested in the process of music\n              discovery, so your interactions will be recorded for research\n              purposes. Please ensure before beginning the experiment that\n              you are in a comfortable setting, free from significant\n              distractions, and have plenty of time so that you can engage with\n              each song recommendation.</p>\n              <p>Note: You must be a Spotify Premium user in order to proceed.</p>\n            <button className=\"Button\"\n              onClick={() => {this.setState({readInstructions: true})}}>Read Instructions</button>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"Login\">\n          <div className=\"Intro\">\n            <h2>Your task is to explore each song from your Discover Weekly\n              playlist and save those that you like and would listen to\n              in the future to a new playlist!</h2>\n            <p>Before proceeding to the experiment, please follow these simple instructions below</p>\n          </div>\n          <div className=\"Intro\">\n            <h2>1) Open Spotify on your preferred device and play your favorite song!</h2>\n            <p>Although you will be interacting with your music within this browser, the music\n              itself will be playing through Spotify wherever you have it open.</p>\n            <p>If you don't have Spotify's Desktop or Mobile Application downloaded, you can\n              visit <a href=\"https://open.spotify.com/\" target=\"_blank\">Spotify's Web Player</a> and\n              have the window open in the background during the experiment.</p>\n            <h2>2) Make sure you’re following your Discover Weekly playlist</h2>\n            <img src='img/dw.jpg' className=\"Image\"></img>\n            <p style={{alignSelf: 'center'}}>(the heart symbol should be filled in)</p>\n            <h2>3) When you enter the experiment... </h2>\n            <p>Your Discover Weekly Playlist will be displayed on the left-hand side,\n              and a new playlist that you can add songs to will be displayed on the right-hand side.</p>\n            <p>- You can listen to each track by clicking the &#x25B6; / &#10074;&#10074; button.</p>\n            <img src='img/play.jpg' className=\"Image\"></img>\n            <p>- You can save the song to your library by clicking the &#x2661; button.</p>\n            <img src='img/like.jpg' className=\"Image\"></img>\n            <p>- You can search for other tracks by the artist by entering the artist’s name into the search bar.</p>\n            <img src='img/search.jpg' className=\"Image\"></img>\n            <p>- You can add songs that you like by pressing the + button.</p>\n            <img src='img/add.jpg' className=\"Image\"></img>\n            <p>- Lastly, give your playlist a new name</p>\n            <img src='img/new_name.gif' className=\"Image\"></img>\n            <p>Once you've checked out every song on your Discover Weekly playlist,\n              not to mention the others that you may have come across in searches,\n              and have saved those that you liked to your newly named playlist,\n              go ahead and <strong>save it to Spotify</strong>!</p>\n            <p>**You must complete this step before exiting the experiment in\n              order for your data to save and your playlist to be created**</p>\n            <h2 style={{alignSelf: 'center'}}>You're all set to begin exploring!</h2>\n            <a href=\"/start\" style={{alignSelf: 'center'}}>\n              <button className=\"Button\"\n                onClick={this.props.logIn}>Login with Spotify</button>\n            </a>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nimport './NowPlaying.css';\n\nclass NowPlaying extends React.Component {\n  render() {\n    if(this.props.trackName) {\n      return (\n        <div className=\"NowPlaying\">\n          <h2>Now Playing:</h2>\n          <img src={ this.props.trackImage } style={{width: 150}} alt=\"\"/>\n          <h3>{ this.props.trackName } by {this.props.trackArtist}</h3>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"NowPlaying\">\n          <h2>Now Playing:</h2>\n          <h3>Please play a song in the Spotify Application on your preferred device before beginning.</h3>\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default NowPlaying;\n","import React from 'react';\n\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: ''\n    }\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n  handleTermChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input onChange={this.handleTermChange}\n          placeholder=\"Search for an Artist\" />\n        <button onClick={this.search}\n          className=\"SearchButton\">SEARCH</button>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nimport './Track.css';\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      saved: false,\n    }\n\n    this.saveTrack = this.saveTrack.bind(this);\n    this.unsaveTrack = this.unsaveTrack.bind(this);\n    this.playTrack = this.playTrack.bind(this);\n    this.pauseTrack = this.pauseTrack.bind(this);\n    this.checkNowPlaying = this.checkNowPlaying.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n\n  playback() {\n    if(this.props.uri === this.props.nowPlaying.uri && this.props.nowPlaying.isPlaying) {\n      return <button className=\"Track-action\"\n        onClick={this.pauseTrack}>&#10074;&#10074;</button>\n    } else {\n      return <button className=\"Track-action\"\n        onClick={this.playTrack}>&#x25B6;</button>\n    }\n  }\n\n  heart() {\n    if(this.state.saved === true) {\n      return <button className=\"Track-action\"\n        onClick={this.unsaveTrack}>&#x2665;</button>\n    } else {\n      return <button className=\"Track-action\"\n        onClick={this.saveTrack}>&#x2661;</button>\n    }\n  }\n\n  renderAction() {\n    if(this.props.isRemoval) {\n      return <button className=\"Track-action\"\n        onClick={this.removeTrack}>-</button>\n    } else {\n      return <button className=\"Track-action\"\n        onClick={this.addTrack}>+</button>\n    }\n  }\n\n  saveTrack() {\n    this.props.onSave(this.props.id);\n    this.setState({ saved: true });\n  }\n\n  unsaveTrack() {\n    this.props.onUnsave(this.props.id);\n    this.setState({ saved: false });\n  }\n\n  pauseTrack() {\n    this.props.onPause();\n    //this.setState({ isPlaying: false });\n  }\n\n  playTrack() {\n    if(this.props.nowPlaying.uri === this.props.uri) {\n      this.props.onPlay();\n    } else {\n      this.props.onPlay(this.props.uri);\n    }\n    //this.setState({ isPlaying: true });\n  }\n\n  checkNowPlaying() {\n    this.setState({ isPlaying: this.props.nowPlaying.isPlaying});\n  }\n\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n            <p>{this.props.track.artist} | {this.props.track.album}</p>\n        </div>\n        {this.playback()}\n        {this.heart()}\n        {this.renderAction()}\n      </div>\n    )\n  }\n}\n\nexport default Track;\n","import React from 'react';\n\nimport './TrackList.css';\n\nimport Track from '../Track/Track'\n\nclass TrackList extends React.Component {\n  render() {\n    let tracks = this.props.tracks\n    return (\n      <div className=\"TrackList\">\n        {\n          tracks.map(track => {\n            return <Track track={track}\n              key={track.id}\n              id={track.id}\n              uri={track.uri}\n              nowPlaying={this.props.nowPlaying}\n              onSave={this.props.onSave}\n              onUnsave={this.props.onUnsave}\n              onPlay={this.props.onPlay}\n              onPause={this.props.onPause}\n              onAdd={this.props.onAdd}\n              onRemove={this.props.onRemove}\n              isRemoval={this.props.isRemoval}/>\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default TrackList;\n","import React from 'react';\n\nimport './SearchResults.css';\n\nimport TrackList from '../TrackList/TrackList';\n\nclass SearchResults extends React.Component {\n  render() {\n    return(\n      <div className=\"SearchResults\">\n        <h2>Search Results</h2>\n        <TrackList tracks={this.props.tracks}\n          nowPlaying={this.props.nowPlaying}\n          onSave={this.props.onSave}\n          onUnsave={this.props.onUnsave}\n          onPlay={this.props.onPlay}\n          onPause={this.props.onPause}\n          onAdd={this.props.onAdd}\n          isRemoval={false}/>\n      </div>\n    )\n  }\n}\n\nexport default SearchResults;\n","import React from 'react';\n\nimport './Playlist.css';\n\nimport TrackList from '../TrackList/TrackList';\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  handleNameChange(event) {\n    this.props.onNameChange(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input defaultValue={this.props.playlistName}\n          onChange={this.handleNameChange}/>\n        <TrackList tracks={this.props.playlistTracks}\n          nowPlaying={this.props.nowPlaying}\n          onSave={this.props.onSave}\n          onUnsave={this.props.onUnsave}\n          onPlay={this.props.onPlay}\n          onPause={this.props.onPause}\n          onRemove={this.props.onRemove}\n          isRemoval={true}/>\n        <button className=\"Playlist-save\"\n          onClick={this.props.onSavePlaylist}>SAVE TO SPOTIFY</button>\n      </div>\n    )\n  }\n}\n\nexport default Playlist;\n","import React from 'react';\n\nimport './DiscoverWeekly.css';\n\nimport TrackList from '../TrackList/TrackList';\n\nclass DiscoverWeekly extends React.Component {\n  render() {\n    return (\n      <div className=\"DiscoverWeekly\">\n        <h2>Discover Weekly</h2>\n        <TrackList tracks={this.props.tracks}\n          nowPlaying={this.props.nowPlaying}\n          onSave={this.props.onSave}\n          onUnsave={this.props.onUnsave}\n          onPlay={this.props.onPlay}\n          onPause={this.props.onPause}\n          onAdd={this.props.onAdd}\n          isRemoval={false}/>\n      </div>\n    )\n  }\n}\n\nexport default DiscoverWeekly;\n","import React from 'react';\nimport './App.css';\n\nimport SpotifyWebApi from '../../../node_modules/spotify-web-api-js';\nimport Login from '../Login/Login';\nimport NowPlaying from '../NowPlaying/NowPlaying';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport DiscoverWeekly from '../DiscoverWeekly/DiscoverWeekly';\nimport { setIntervalAsync, clearIntervalAsync } from 'set-interval-async/dynamic';\n\nlet timeStart = 0;\nlet songRecommendations = [];\nlet timeline = [];\n\nconst spotifyApi = new SpotifyWebApi();\n\nlet confirmExit = true;\nlet leave_message = 'Are you sure you want to leave? Your playlist has not yet been saved.'\nfunction goodbye(e) {\n  if(confirmExit) {\n    if(!e) e = window.event;\n    // e.cancelBubble is supported by IE - this will kill the bubbling process.\n    e.cancelBubble = true;\n    e.returnValue = leave_message;\n    // e.stopPropagation works in Firefox.\n    if (e.stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    // return works for Chrome and Safari\n    return leave_message;\n  }\n}\nwindow.onbeforeunload = goodbye;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    let access_token = params.access_token,\n        refresh_token = params.refresh_token,\n        expires_in = params.expires_in\n\n    this.state = {\n      isLoggedIn: params.access_token ? true : false,\n      username: '',\n      userID: '',\n      nowPlaying: '',\n      recommendations: [],\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    }\n    if (access_token) {\n      console.log('Access Token')\n      // Initialize starting time\n      timeStart = Date.now();\n      //Set Access Token\n      spotifyApi.setAccessToken(access_token);\n      // Reset Access Token\n      setInterval(\n        function() {\n          var get_refresh_token = new XMLHttpRequest();\n          get_refresh_token.open('POST', '/refresh_token', true);\n          get_refresh_token.setRequestHeader(\"Content-type\", \"application/json\");\n          get_refresh_token.onload = function() {\n              access_token = JSON.parse(get_refresh_token.response).access_token;\n              spotifyApi.setAccessToken(access_token);\n          };\n          get_refresh_token.send(JSON.stringify({\n            'refresh_token': refresh_token\n          }))\n        },\n        600000\n      )\n      // Get User information\n      this.getUser();\n      // Upload Discover Weekly\n      this.getDiscoverWeekly();\n      // Check Now Playing\n      setIntervalAsync(\n        async () => {\n          let response = await spotifyApi.getMyCurrentPlaybackState();\n          if (response === '') {\n            return;\n          }\n          this.setState({\n            nowPlaying: {\n              isPlaying: response.is_playing,\n              id: response.item.id,\n              name: response.item.name,\n              artist: response.item.artists[0].name,\n              album: response.item.album.name,\n              duration_ms: response.item.duration_ms,\n              progress_ms: response.progress_ms,\n              uri: response.item.uri,\n              image: response.item.album.images[0].url\n            }\n          })\n        },\n        1000\n      );\n    }\n\n    this.getUser = this.getUser.bind(this);\n    this.getDiscoverWeekly = this.getDiscoverWeekly.bind(this);\n    this.search = this.search.bind(this);\n    this.beginPlayback = this.beginPlayback.bind(this);\n    this.endPlayback = this.endPlayback.bind(this);\n    this.saveTrack = this.saveTrack.bind(this);\n    this.unsaveTrack = this.unsaveTrack.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  async getUser() {\n    let user = await spotifyApi.getMe()\n    console.log(\"User information:\", user);\n    this.setState({\n      username: user.display_name,\n      userID: user.id,\n    })\n  }\n\n  async getDiscoverWeekly() {\n    try {\n      // Get List of User's Playlists\n      let playlist = await spotifyApi.getUserPlaylists({limit: 50})\n        .then(function(playlists) {\n          return playlists.items.map(pl => ({\n            name: pl.name,\n            id: pl.id,\n          })).filter(item => item.name === \"Discover Weekly\");\n        }, function(err) {\n          console.error(err);\n        })\n      // Get user's Discover Weekly recommendations\n      let discoverWeekly = await spotifyApi.getPlaylistTracks(this.state.username, playlist[0].id)\n        .then(function(playlist) {\n          let tracks = playlist.items.map(track => ({\n            id: track.track.id,\n            name: track.track.name.substring(0, 40),\n            artist: track.track.artists[0].name.substring(0, 70),\n            album: track.track.album.name.substring(0, 70),\n            duration_ms: track.track.duration_ms,\n            uri: track.track.uri\n          }))\n          return tracks;\n        }, function(err) {\n          console.error(err);\n        })\n      // Add Discover Weekly tracks to the app's state\n      this.setState({ recommendations: discoverWeekly });\n      // Get List of Discover Weekly recommendations' audio features\n      let features = await spotifyApi.getAudioFeaturesForTracks(discoverWeekly.map(track => track.id))\n        .then(function(data) {\n          if(!data[\"audio_features\"]) {\n            return [];\n          }\n          return data[\"audio_features\"].map(track => ({\n            id: track.id,\n            danceability: track.danceability,\n            energy: track.energy,\n            key: track.key,\n            loudness: track.loudness,\n            mode: track.mode,\n            speechiness: track.speechiness,\n            acousticness: track.acousticness,\n            instrumentalness: track.instrumentalness,\n            liveness: track.liveness,\n            valence: track.valence,\n            tempo: track.tempo,\n            time_signature: track.time_signature,\n          }));\n        });\n      // Combine the two lists above that were just created\n      songRecommendations = discoverWeekly.map((item,i) => {\n        if(item.id === features[i].id) {\n          return Object.assign({},item,features[i]);\n        }\n      });\n      console.log('Discover Weekly:', songRecommendations);\n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  async search(term) {\n    var results = await spotifyApi.searchTracks('artist:'+term)\n      .then(function(data) {\n        if(!data.tracks) {\n          return [];\n        }\n        return data.tracks.items.map(track => ({\n          id: track.id,\n          name: track.name.substring(0, 40),\n          artist: track.artists[0].name.substring(0, 70),\n          album: track.album.name.substring(0, 70),\n          uri: track.uri\n        }))\n      }, function(err) {\n        console.error(err);\n      })\n    console.log('Search Results:', results);\n    this.setState({ searchResults: results });\n    timeline.push({\n      type: \"search\",\n      time_stamp: Date.now()-timeStart,\n      artist: term,\n    });\n  }\n\n  async beginPlayback(uri) {\n    let nowPlaying = this.state.nowPlaying;\n    if(uri) {\n      if(nowPlaying) {\n        timeline.push({\n          type: \"play\",\n          time_stamp: Date.now()-timeStart-nowPlaying.progress_ms,\n          time_end: Date.now()-timeStart,\n          id: nowPlaying.id,\n          name: nowPlaying.name,\n          artist: nowPlaying.artist,\n          album: nowPlaying.album,\n          duration_ms: nowPlaying.duration_ms,\n          progress_ms: nowPlaying.progress_ms,\n        })\n      }\n      await spotifyApi.play({'uris':[uri]}, function(err, data) {\n        console.log(err);\n        console.log(data);\n      });\n      timeline.push({\n        type: \"play\",\n        time_stamp:Date.now()-timeStart,\n        id: nowPlaying.id,\n        name: nowPlaying.name,\n        artist: nowPlaying.artist,\n        album: nowPlaying.album,\n        duration_ms: nowPlaying.duration_ms,\n        progress_ms: nowPlaying.progress_ms,\n      })\n    } else {\n      await spotifyApi.play({}, function(err, data) {\n        console.log(err);\n        console.log(data);\n      });\n    }\n  }\n\n  endPlayback(uri) {\n    if (this.state.nowPlaying === {}) {\n      return;\n    }\n    spotifyApi.pause({}, function(err, data) {\n      console.log(err);\n      console.log(data);\n    });\n  }\n\n  saveTrack(track) {\n    spotifyApi.addToMySavedTracks([track])\n    let dwObject = this.state.recommendations.filter(function(song){\n      return song.id === track;\n    });\n    let searchObject = this.state.searchResults.filter(function(song){\n        return song.id === track;\n    });\n    let trackObject = dwObject===[] ? searchObject : dwObject;\n    console.log(trackObject);\n    timeline.push({\n      type: \"save\",\n      time_stamp: Date.now()-timeStart,\n      id: track,\n      name: trackObject.name,\n      artist: trackObject.artist,\n      album: trackObject.album,\n      duration_ms: trackObject.duration_ms,\n    });\n  }\n\n  unsaveTrack(track) {\n    spotifyApi.removeFromMySavedTracks([track])\n    let dwObject = this.state.recommendations.filter(function(song){\n      return song.id === track;\n    });\n    let searchObject = this.state.searchResults.filter(function(song){\n        return song.id === track;\n    });\n    let trackObject = dwObject===[] ? searchObject : dwObject;\n    console.log(trackObject);\n    timeline.push({\n      type: \"unsave\",\n      time_stamp: Date.now()-timeStart,\n      id: track,\n      name: trackObject.name,\n      artist: trackObject.artist,\n      album: trackObject.album,\n      duration_ms: trackObject.duration_ms,\n    });\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if(tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    console.log(track);\n    timeline.push({\n      type: \"add\",\n      time_stamp: Date.now()-timeStart,\n      id: track.id,\n      name: track.name,\n      artist: track.artist,\n      album: track.album,\n      duration_ms: track.duration_ms,\n    });\n    tracks.push(track);\n    this.setState({ playlistTracks: tracks });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    console.log(track);\n    timeline.push({\n      type: \"remove\",\n      time_stamp: Date.now()-timeStart,\n      id: track.id,\n      name: track.name,\n      artist: track.artist,\n      album: track.album,\n      duration_ms: track.duration_ms,\n    });\n    this.setState({ playlistTracks: tracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  async savePlaylist(name) {\n    let nowPlaying = this.state.nowPlaying;\n    if(nowPlaying) {\n      timeline.push({\n        type: \"play\",\n        time_stamp:Date.now()-timeStart-nowPlaying.progress_ms,\n        time_end: Date.now()-timeStart,\n        id: nowPlaying.id,\n        name: nowPlaying.name,\n        artist: nowPlaying.artist,\n        album: nowPlaying.album,\n        duration_ms: nowPlaying.duration_ms,\n        progress_ms: nowPlaying.progress_ms,\n      })\n    }\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    if(!name || !trackUris) {\n      return;\n    }\n    let newPlaylist = await spotifyApi.createPlaylist(this.state.userID, {name: this.state.playlistName})\n      .then(function(data) {\n        return data.id\n      })\n    console.log(timeline);\n    console.log(songRecommendations);\n    var save_request = new XMLHttpRequest();\n    save_request.open('POST', '/save_data', true);\n    save_request.setRequestHeader(\"Content-type\", \"application/json\");\n    save_request.send(JSON.stringify({id: this.state.userID, data: timeline, type: \"timeline\"}));\n    var save_songs = new XMLHttpRequest();\n    save_songs.open('POST', '/save_data', true);\n    save_songs.setRequestHeader(\"Content-type\", \"application/json\");\n    save_songs.send(JSON.stringify({id: this.state.userID, data: songRecommendations, type:\"recommendations\"}));\n    spotifyApi.addTracksToPlaylist(this.state.userID, newPlaylist, trackUris);\n    confirmExit = false;\n    alert(\"You have successfully created a new playlist called \" + this.state.playlistName +\n      \". You may now exit the experiment. Feel free to revisit next week \" +\n      \"once your Discover Weeekly playlist has reset!\");\n  }\n\n  render() {\n    let isLoggedIn = this.state.isLoggedIn;\n\n    if (isLoggedIn === false) {\n      return (\n        <div>\n          <h1>Music Discovery with <span className=\"highlight\">Spotify</span></h1>\n          <div className=\"App\">\n            <Login logIn={() => {confirmExit=false;}}/>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <h1>Music Discovery with <span className=\"highlight\">Spotify</span></h1>\n          <h2 className=\"welcome\">Welcome, {this.state.username}!</h2>\n          <div className=\"App\">\n            <div className=\"App-top\">\n              <NowPlaying currentTrack={this.getDiscoverWeekly}\n                trackName={this.state.nowPlaying.name}\n                trackArtist={this.state.nowPlaying.artist}\n                trackImage={this.state.nowPlaying.image}/>\n              <SearchBar onSearch={this.search}/>\n            </div>\n            <div className=\"App-playlist\">\n              <DiscoverWeekly tracks={this.state.recommendations}\n                nowPlaying={this.state.nowPlaying}\n                onSave={this.saveTrack}\n                onUnsave={this.unsaveTrack}\n                onAdd={this.addTrack}\n                onPlay={this.beginPlayback}\n                onPause={this.endPlayback}/>\n              <SearchResults tracks={this.state.searchResults}\n                nowPlaying={this.state.nowPlaying}\n                onSave={this.saveTrack}\n                onUnsave={this.unsaveTrack}\n                onChange={this.updateSearchResults}\n                onAdd={this.addTrack}\n                onPlay={this.beginPlayback}\n                onPause={this.endPlayback}/>\n              <Playlist playlistName={this.state.playlistName}\n                playlistTracks={this.state.playlistTracks}\n                nowPlaying={this.state.nowPlaying}\n                onSave={this.saveTrack}\n                onUnsave={this.unsaveTrack}\n                onRemove={this.removeTrack}\n                onNameChange={this.updatePlaylistName}\n                onSavePlaylist={this.savePlaylist}\n                onPlay={this.beginPlayback}\n                onPause={this.endPlayback}/>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}